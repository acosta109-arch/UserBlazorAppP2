@page "/Delete/Roles/{roleId:int}"
@inject IClientService<AspNetRoles> roleService
@inject NavigationManager Navigation

<PageTitle>Eliminar Rol</PageTitle>

@if (Rol == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <Toasts class="p-3" Messages="MensajeToast" Placement="ToastsPlacement.TopRight" />
    <div class="container">
        <div class="card shadow-lg">
            @*Header*@
            <div class="card-header text-center">
                <div class="bg-danger text-white">
                    <h3><strong>Eliminar rol</strong></h3>
                </div>
            </div>

            @*Body*@
            <div class="card-body">
                <div class="row">
                    <div class="col-6">
                        <!-- ID -->
                        <label class="form-label"><strong>ID del Rol</strong></label>
                        <p>@Rol.Id</p>
                    </div>
                    <div class="col-6">
                        <!-- Role Name -->
                        <label class="form-label"><strong>Nombre del Rol</strong></label>
                        <p>@Rol.Name</p>
                    </div>
                </div>
                @*Footer*@
                <div class="card-footer text-center">
                    <button class="btn btn-secondary ms-2 bi bi-arrow-90deg-left" @onclick="Volver">  Volver</button>
                    <button class="btn btn-danger ms-2 bi bi-trash-fill" @onclick="Eliminar">  Eliminar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int roleId { get; set; }
    public AspNetRoles Rol { get; set; } = new AspNetRoles();
    public List<ToastMessage> MensajeToast { get; set; } = new List<ToastMessage>();

    private ToastMessage CreateToastMessage(ToastType toastType, string mensaje)
      => new ToastMessage
          {
              Type = toastType,
              Title = "Notificación",
              HelpText = $"{DateTime.Now}",
              Message = mensaje,
          };

    private void Mensaje(ToastType toastType, string mensaje)
    {
        MensajeToast.Add(CreateToastMessage(toastType, mensaje));
    }

    protected override async Task OnInitializedAsync()
    {
        Rol = await roleService.GetByIdAsync(roleId);
    }

    public async Task Eliminar()
    {
        var result = await roleService.DeleteAsync(roleId);

        if (result)
        {
            Mensaje(ToastType.Success, "Rol eliminado correctamente.");
            Navigation.NavigateTo("/Index/Roles");
        }
        else
        {
            Mensaje(ToastType.Danger, "Error al eliminar el rol.");
        }
    }

    public void Volver()
    {
        Navigation.NavigateTo("/Index/Roles");
    }
}
